{
  "name": "cumul8_test",
  "version": "1.0.0",
  "description": "A timesheet tracking app for movie industry artists!",
  "main": "index.js",
  "author": "",
  "license": "ISC",
  "dependencies": {
    "babel-runtime": "^5.8.20",
    "express": "^4.13.3",
    "lodash": "^3.10.1",
    "moment": "^2.10.6",
    "mongoose": "^4.1.3",
    "nodemon": "^1.4.1",
    "normalize.css": "^3.0.3",
    "object-assign": "^4.0.1",
    "react": "^0.13.3",
    "react-router": "^0.13.3",
    "react-widgets": "^2.8.0",
    "reflux": "^0.2.12",
    "webpack": "^1.11.0"
  },
  "devDependencies": {
    "babel-core": "^5.8.22",
    "babel-loader": "^5.3.2",
    "css-loader": "^0.16.0",
    "extract-text-webpack-plugin": "^0.8.2",
    "file-loader": "^0.8.4",
    "node-sass": "^3.2.0",
    "react-hot-loader": "^1.2.8",
    "sass-loader": "^2.0.1",
    "style-loader": "^0.12.3",
    "url-loader": "^0.5.6",
    "webpack-dev-server": "^1.10.1"
  },
  "scripts": {

    "//": "removes the lib folder",
    "clean": "rm -rf lib",

    "//": "babel watches the src folder and writes out any code changes to the lib folder",
    "transpile": "babel src --out-dir lib -w",

    "//": "starts up the webpack dev server and binds it to port 8080",
    "dev-server": "webpack-dev-server --devtool-eval --inline --hot --colors --progress --display-error-details --content-base build",

    "//": "runs the server.js from the transpiled ES5 in the lib folder",
    "server": "nodemon --debug ./lib/server/server.js",

    "//": "write all the client code changes to the build folder",
    "write-to-disk": "webpack --watch --progress --colors --display-error-details -d",

    "//": "transpiles all the client side code into dist folder",
    "deploy": "NODE_ENV=production webpack -p --config webpack.production.config.js",

    "//": "watches the project to transpile any changes to lib folder, starts up webpack at 8080 and watches for any client side code changes, and fires up the node server from the lib folder",
    "start": "npm run transpile & npm run dev-server & npm run server"
  }
}
